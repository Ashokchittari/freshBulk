{"ast":null,"code":"import { defineIntegration, fill, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from '../../../debug-build.js';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../../utils/featureFlags.js';\n\n/**\n * Sentry integration for capturing feature flag evaluations from the Unleash SDK.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import { UnleashClient } from 'unleash-proxy-client';\n * import * as Sentry from '@sentry/browser';\n *\n * Sentry.init({\n *   dsn: '___PUBLIC_DSN___',\n *   integrations: [Sentry.unleashIntegration({featureFlagClientClass: UnleashClient})],\n * });\n *\n * const unleash = new UnleashClient(...);\n * unleash.start();\n *\n * unleash.isEnabled('my-feature');\n * Sentry.captureException(new Error('something went wrong'));\n * ```\n */\nconst unleashIntegration = defineIntegration(({\n  featureFlagClientClass: unleashClientClass\n}) => {\n  return {\n    name: 'Unleash',\n    processEvent(event, _hint, _client) {\n      return copyFlagsFromScopeToEvent(event);\n    },\n    setupOnce() {\n      const unleashClientPrototype = unleashClientClass.prototype;\n      fill(unleashClientPrototype, 'isEnabled', _wrappedIsEnabled);\n    }\n  };\n});\n\n/**\n * Wraps the UnleashClient.isEnabled method to capture feature flag evaluations. Its only side effect is writing to Sentry scope.\n *\n * This wrapper is safe for all isEnabled signatures. If the signature does not match (this: UnleashClient, toggleName: string, ...args: unknown[]) => boolean,\n * we log an error and return the original result.\n *\n * @param original - The original method.\n * @returns Wrapped method. Results should match the original.\n */\nfunction _wrappedIsEnabled(original) {\n  return function (...args) {\n    const toggleName = args[0];\n    const result = original.apply(this, args);\n    if (typeof toggleName === 'string' && typeof result === 'boolean') {\n      insertFlagToScope(toggleName, result);\n    } else if (DEBUG_BUILD) {\n      logger.error(`[Feature Flags] UnleashClient.isEnabled does not match expected signature. arg0: ${toggleName} (${typeof toggleName}), result: ${result} (${typeof result})`);\n    }\n    return result;\n  };\n}\nexport { unleashIntegration };","map":{"version":3,"names":["unleashIntegration","defineIntegration","featureFlagClientClass","unleashClientClass","name","processEvent","event","_hint","_client","copyFlagsFromScopeToEvent","setupOnce","unleashClientPrototype","prototype","fill","_wrappedIsEnabled","original","args","toggleName","result","apply","insertFlagToScope","DEBUG_BUILD","logger","error"],"sources":["C:\\Users\\chitt\\OneDrive\\Documents\\Projects\\fresh-bulk\\frontend\\node_modules\\@sentry\\browser\\src\\integrations\\featureFlags\\unleash\\integration.ts"],"sourcesContent":["import type { Client, Event, EventHint, IntegrationFn } from '@sentry/core';\n\nimport { defineIntegration, fill, logger } from '@sentry/core';\nimport { DEBUG_BUILD } from '../../../debug-build';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../../utils/featureFlags';\nimport type { UnleashClient, UnleashClientClass } from './types';\n\ntype UnleashIntegrationOptions = {\n  featureFlagClientClass: UnleashClientClass;\n};\n\n/**\n * Sentry integration for capturing feature flag evaluations from the Unleash SDK.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import { UnleashClient } from 'unleash-proxy-client';\n * import * as Sentry from '@sentry/browser';\n *\n * Sentry.init({\n *   dsn: '___PUBLIC_DSN___',\n *   integrations: [Sentry.unleashIntegration({featureFlagClientClass: UnleashClient})],\n * });\n *\n * const unleash = new UnleashClient(...);\n * unleash.start();\n *\n * unleash.isEnabled('my-feature');\n * Sentry.captureException(new Error('something went wrong'));\n * ```\n */\nexport const unleashIntegration = defineIntegration(\n  ({ featureFlagClientClass: unleashClientClass }: UnleashIntegrationOptions) => {\n    return {\n      name: 'Unleash',\n\n      processEvent(event: Event, _hint: EventHint, _client: Client): Event {\n        return copyFlagsFromScopeToEvent(event);\n      },\n\n      setupOnce() {\n        const unleashClientPrototype = unleashClientClass.prototype as UnleashClient;\n        fill(unleashClientPrototype, 'isEnabled', _wrappedIsEnabled);\n      },\n    };\n  },\n) satisfies IntegrationFn;\n\n/**\n * Wraps the UnleashClient.isEnabled method to capture feature flag evaluations. Its only side effect is writing to Sentry scope.\n *\n * This wrapper is safe for all isEnabled signatures. If the signature does not match (this: UnleashClient, toggleName: string, ...args: unknown[]) => boolean,\n * we log an error and return the original result.\n *\n * @param original - The original method.\n * @returns Wrapped method. Results should match the original.\n */\nfunction _wrappedIsEnabled(\n  original: (this: UnleashClient, ...args: unknown[]) => unknown,\n): (this: UnleashClient, ...args: unknown[]) => unknown {\n  return function (this: UnleashClient, ...args: unknown[]): unknown {\n    const toggleName = args[0];\n    const result = original.apply(this, args);\n\n    if (typeof toggleName === 'string' && typeof result === 'boolean') {\n      insertFlagToScope(toggleName, result);\n    } else if (DEBUG_BUILD) {\n      logger.error(\n        `[Feature Flags] UnleashClient.isEnabled does not match expected signature. arg0: ${toggleName} (${typeof toggleName}), result: ${result} (${typeof result})`,\n      );\n    }\n    return result;\n  };\n}\n"],"mappings":";;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,kBAAmB,GAAEC,iBAAiB,CACjD,CAAC;EAAEC,sBAAsB,EAAEC;AAAmB,CAAC,KAAgC;EAC7E,OAAO;IACLC,IAAI,EAAE,SAAS;IAEfC,YAAYA,CAACC,KAAK,EAASC,KAAK,EAAaC,OAAO,EAAiB;MACnE,OAAOC,yBAAyB,CAACH,KAAK,CAAC;IAC/C,CAAO;IAEDI,SAASA,CAAA,EAAG;MACV,MAAMC,sBAAA,GAAyBR,kBAAkB,CAACS,SAAU;MAC5DC,IAAI,CAACF,sBAAsB,EAAE,WAAW,EAAEG,iBAAiB,CAAC;IACpE;EACA,CAAK;AACL,CACA,CAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAiBA,CACxBC,QAAQ,EAC8C;EACtD,OAAO,UAA+B,GAAGC,IAAI,EAAsB;IACjE,MAAMC,UAAW,GAAED,IAAI,CAAC,CAAC,CAAC;IAC1B,MAAME,MAAO,GAAEH,QAAQ,CAACI,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC;IAEzC,IAAI,OAAOC,UAAW,KAAI,QAAS,IAAG,OAAOC,MAAA,KAAW,SAAS,EAAE;MACjEE,iBAAiB,CAACH,UAAU,EAAEC,MAAM,CAAC;IAC3C,CAAM,MAAK,IAAIG,WAAW,EAAE;MACtBC,MAAM,CAACC,KAAK,CACV,oFAAoFN,UAAU,KAAK,OAAOA,UAAU,cAAcC,MAAM,KAAK,OAAOA,MAAM,GAClK,CAAO;IACP;IACI,OAAOA,MAAM;EACjB,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}