{"ast":null,"code":"/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nfunction merge(initialObj, mergeObj, levels = 2) {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = {\n    ...initialObj\n  };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n  return output;\n}\nexport { merge };","map":{"version":3,"names":["merge","initialObj","mergeObj","levels","Object","keys","length","output","key","prototype","hasOwnProperty","call"],"sources":["C:\\Users\\chitt\\OneDrive\\Documents\\Projects\\fresh-bulk\\frontend\\node_modules\\@sentry\\core\\src\\utils\\merge.ts"],"sourcesContent":["/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nexport function merge<T>(initialObj: T, mergeObj: T, levels = 2): T {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = { ...initialObj };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n\n  return output;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,KAAKA,CAAIC,UAAU,EAAKC,QAAQ,EAAKC,MAAO,GAAE,CAAC,EAAK;EACpE;EACA;EACE,IAAI,CAACD,QAAA,IAAY,OAAOA,QAAS,KAAI,QAAS,IAAGC,MAAO,IAAG,CAAC,EAAE;IAC5D,OAAOD,QAAQ;EACnB;;EAEA;EACE,IAAID,UAAW,IAAGG,MAAM,CAACC,IAAI,CAACH,QAAQ,CAAC,CAACI,MAAO,KAAI,CAAC,EAAE;IACpD,OAAOL,UAAU;EACrB;;EAEA;EACE,MAAMM,MAAO,GAAE;IAAE,GAAGN;EAAA,CAAY;;EAElC;EACE,KAAK,MAAMO,GAAI,IAAGN,QAAQ,EAAE;IAC1B,IAAIE,MAAM,CAACK,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,QAAQ,EAAEM,GAAG,CAAC,EAAE;MACvDD,MAAM,CAACC,GAAG,IAAIR,KAAK,CAACO,MAAM,CAACC,GAAG,CAAC,EAAEN,QAAQ,CAACM,GAAG,CAAC,EAAEL,MAAO,GAAE,CAAC,CAAC;IACjE;EACA;EAEE,OAAOI,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}