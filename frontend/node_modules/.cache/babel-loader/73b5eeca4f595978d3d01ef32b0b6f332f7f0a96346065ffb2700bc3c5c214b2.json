{"ast":null,"code":"/**\n * Get a list of possible event messages from a Sentry event.\n */\nfunction getPossibleEventMessages(event) {\n  const possibleMessages = [];\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    const lastException = event.exception.values[event.exception.values.length - 1];\n    if (lastException?.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  } catch (e) {\n    // ignore errors here\n  }\n  return possibleMessages;\n}\nexport { getPossibleEventMessages };","map":{"version":3,"names":["getPossibleEventMessages","event","possibleMessages","message","push","lastException","exception","values","length","value","type","e"],"sources":["C:\\Users\\chitt\\OneDrive\\Documents\\Projects\\fresh-bulk\\frontend\\node_modules\\@sentry\\core\\src\\utils\\eventUtils.ts"],"sourcesContent":["import type { Event } from '../types-hoist';\n\n/**\n * Get a list of possible event messages from a Sentry event.\n */\nexport function getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    const lastException = event.exception.values[event.exception.values.length - 1];\n    if (lastException?.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  } catch (e) {\n    // ignore errors here\n  }\n\n  return possibleMessages;\n}\n"],"mappings":"AAEA;AACA;AACA;AACO,SAASA,wBAAwBA,CAACC,KAAK,EAAmB;EAC/D,MAAMC,gBAAgB,GAAa,EAAE;EAErC,IAAID,KAAK,CAACE,OAAO,EAAE;IACjBD,gBAAgB,CAACE,IAAI,CAACH,KAAK,CAACE,OAAO,CAAC;EACxC;EAEE,IAAI;IACN;IACI,MAAME,aAAc,GAAEJ,KAAK,CAACK,SAAS,CAACC,MAAM,CAACN,KAAK,CAACK,SAAS,CAACC,MAAM,CAACC,MAAO,GAAE,CAAC,CAAC;IAC/E,IAAIH,aAAa,EAAEI,KAAK,EAAE;MACxBP,gBAAgB,CAACE,IAAI,CAACC,aAAa,CAACI,KAAK,CAAC;MAC1C,IAAIJ,aAAa,CAACK,IAAI,EAAE;QACtBR,gBAAgB,CAACE,IAAI,CAAC,GAACC,aAAA,CAAAK,IAAA,KAAAL,aAAA,CAAAI,KAAA;MACA;IACA;EACA,SAAAE,CAAA;IACA;EAAA;EAGA,OAAAT,gBAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}