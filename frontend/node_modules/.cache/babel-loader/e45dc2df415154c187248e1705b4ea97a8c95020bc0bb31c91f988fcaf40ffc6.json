{"ast":null,"code":"import { defineIntegration } from '@sentry/core';\nimport { insertFlagToScope, copyFlagsFromScopeToEvent } from '../../../utils/featureFlags.js';\n\n/**\n * Sentry integration for capturing feature flag evaluations from the Statsig js-client SDK.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import { StatsigClient } from '@statsig/js-client';\n * import * as Sentry from '@sentry/browser';\n *\n * const statsigClient = new StatsigClient();\n *\n * Sentry.init({\n *   dsn: '___PUBLIC_DSN___',\n *   integrations: [Sentry.statsigIntegration({featureFlagClient: statsigClient})],\n * });\n *\n * await statsigClient.initializeAsync();  // or statsigClient.initializeSync();\n *\n * const result = statsigClient.checkGate('my-feature-gate');\n * Sentry.captureException(new Error('something went wrong'));\n * ```\n */\nconst statsigIntegration = defineIntegration(({\n  featureFlagClient: statsigClient\n}) => {\n  return {\n    name: 'Statsig',\n    processEvent(event, _hint, _client) {\n      return copyFlagsFromScopeToEvent(event);\n    },\n    setup() {\n      statsigClient.on('gate_evaluation', event => {\n        insertFlagToScope(event.gate.name, event.gate.value);\n      });\n    }\n  };\n});\nexport { statsigIntegration };","map":{"version":3,"names":["statsigIntegration","defineIntegration","featureFlagClient","statsigClient","name","processEvent","event","_hint","_client","copyFlagsFromScopeToEvent","setup","on","insertFlagToScope","gate","value"],"sources":["C:\\Users\\chitt\\OneDrive\\Documents\\Projects\\fresh-bulk\\frontend\\node_modules\\@sentry\\browser\\src\\integrations\\featureFlags\\statsig\\integration.ts"],"sourcesContent":["import type { Client, Event, EventHint, IntegrationFn } from '@sentry/core';\n\nimport { defineIntegration } from '@sentry/core';\nimport { copyFlagsFromScopeToEvent, insertFlagToScope } from '../../../utils/featureFlags';\nimport type { FeatureGate, StatsigClient } from './types';\n\n/**\n * Sentry integration for capturing feature flag evaluations from the Statsig js-client SDK.\n *\n * See the [feature flag documentation](https://develop.sentry.dev/sdk/expected-features/#feature-flags) for more information.\n *\n * @example\n * ```\n * import { StatsigClient } from '@statsig/js-client';\n * import * as Sentry from '@sentry/browser';\n *\n * const statsigClient = new StatsigClient();\n *\n * Sentry.init({\n *   dsn: '___PUBLIC_DSN___',\n *   integrations: [Sentry.statsigIntegration({featureFlagClient: statsigClient})],\n * });\n *\n * await statsigClient.initializeAsync();  // or statsigClient.initializeSync();\n *\n * const result = statsigClient.checkGate('my-feature-gate');\n * Sentry.captureException(new Error('something went wrong'));\n * ```\n */\nexport const statsigIntegration = defineIntegration(\n  ({ featureFlagClient: statsigClient }: { featureFlagClient: StatsigClient }) => {\n    return {\n      name: 'Statsig',\n\n      processEvent(event: Event, _hint: EventHint, _client: Client): Event {\n        return copyFlagsFromScopeToEvent(event);\n      },\n\n      setup() {\n        statsigClient.on('gate_evaluation', (event: { gate: FeatureGate }) => {\n          insertFlagToScope(event.gate.name, event.gate.value);\n        });\n      },\n    };\n  },\n) satisfies IntegrationFn;\n"],"mappings":";;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,kBAAmB,GAAEC,iBAAiB,CACjD,CAAC;EAAEC,iBAAiB,EAAEC;AAAc,CAAC,KAA2C;EAC9E,OAAO;IACLC,IAAI,EAAE,SAAS;IAEfC,YAAYA,CAACC,KAAK,EAASC,KAAK,EAAaC,OAAO,EAAiB;MACnE,OAAOC,yBAAyB,CAACH,KAAK,CAAC;IAC/C,CAAO;IAEDI,KAAKA,CAAA,EAAG;MACNP,aAAa,CAACQ,EAAE,CAAC,iBAAiB,EAAGL,KAAK,IAA4B;QACpEM,iBAAiB,CAACN,KAAK,CAACO,IAAI,CAACT,IAAI,EAAEE,KAAK,CAACO,IAAI,CAACC,KAAK,CAAC;MAC9D,CAAS,CAAC;IACV;EACA,CAAK;AACL,CACA,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}