{"ast":null,"code":"import { Client, getSDKSource, applySdkMetadata, _INTERNAL_flushLogsBuffer, addAutoIpAddressToUser, addAutoIpAddressToSession } from '@sentry/core';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nconst DEFAULT_FLUSH_INTERVAL = 5000;\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends Client {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  constructor(options) {\n    const opts = {\n      // We default this to true, as it is the safer scenario\n      parentSpanIsAlwaysRootSpan: true,\n      ...options\n    };\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n    super(opts);\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const client = this;\n    const {\n      sendDefaultPii,\n      _experiments\n    } = client._options;\n    const enableLogs = _experiments?.enableLogs;\n    if (opts.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n          if (enableLogs) {\n            _INTERNAL_flushLogsBuffer(client);\n          }\n        }\n      });\n    }\n    if (enableLogs) {\n      client.on('flush', () => {\n        _INTERNAL_flushLogsBuffer(client);\n      });\n      client.on('afterCaptureLog', () => {\n        if (client._logFlushIdleTimeout) {\n          clearTimeout(client._logFlushIdleTimeout);\n        }\n        client._logFlushIdleTimeout = setTimeout(() => {\n          _INTERNAL_flushLogsBuffer(client);\n        }, DEFAULT_FLUSH_INTERVAL);\n      });\n    }\n    if (sendDefaultPii) {\n      client.on('postprocessEvent', addAutoIpAddressToUser);\n      client.on('beforeSendSession', addAutoIpAddressToSession);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  eventFromMessage(message, level = 'info', hint) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _prepareEvent(event, hint, currentScope, isolationScope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, currentScope, isolationScope);\n  }\n}\nexport { BrowserClient };","map":{"version":3,"names":["DEFAULT_FLUSH_INTERVAL","BrowserClient","Client","constructor","options","opts","parentSpanIsAlwaysRootSpan","sdkSource","WINDOW","SENTRY_SDK_SOURCE","getSDKSource","applySdkMetadata","client","sendDefaultPii","_experiments","_options","enableLogs","sendClientReports","document","addEventListener","visibilityState","_flushOutcomes","_INTERNAL_flushLogsBuffer","on","_logFlushIdleTimeout","clearTimeout","setTimeout","addAutoIpAddressToUser","addAutoIpAddressToSession","eventFromException","exception","hint","stackParser","attachStacktrace","eventFromMessage","message","level","_prepareEvent","event","currentScope","isolationScope","platform"],"sources":["C:\\Users\\chitt\\OneDrive\\Documents\\Projects\\fresh-bulk\\frontend\\node_modules\\@sentry\\browser\\src\\client.ts"],"sourcesContent":["import type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Scope,\n  SeverityLevel,\n} from '@sentry/core';\nimport {\n  Client,\n  addAutoIpAddressToSession,\n  addAutoIpAddressToUser,\n  applySdkMetadata,\n  getSDKSource,\n  _INTERNAL_flushLogsBuffer,\n} from '@sentry/core';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\n\nconst DEFAULT_FLUSH_INTERVAL = 5000;\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/core Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /**\n     * Important: Only set this option if you know what you are doing!\n     *\n     * By default, the SDK will check if `Sentry.init` is called in a browser extension.\n     * In case it is, it will stop initialization and log a warning\n     * because browser extensions require a different Sentry initialization process:\n     * https://docs.sentry.io/platforms/javascript/best-practices/shared-environments/\n     *\n     * Setting up the SDK in a browser extension with global error monitoring is not recommended\n     * and will likely flood you with errors from other web sites or extensions. This can heavily\n     * impact your quota and cause interference with your and other Sentry SDKs in shared environments.\n     *\n     * If this check wrongfully flags your setup as a browser extension, you can set this\n     * option to `true` to skip the check.\n     *\n     * @default false\n     */\n    skipBrowserExtensionCheck?: boolean;\n  };\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions & {\n    /** If configured, this URL will be used as base URL for lazy loading integration. */\n    cdnBaseUrl?: string;\n  };\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends Client<BrowserClientOptions> {\n  private _logFlushIdleTimeout: ReturnType<typeof setTimeout> | undefined;\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const opts = {\n      // We default this to true, as it is the safer scenario\n      parentSpanIsAlwaysRootSpan: true,\n      ...options,\n    };\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const client = this;\n    const { sendDefaultPii, _experiments } = client._options;\n    const enableLogs = _experiments?.enableLogs;\n\n    if (opts.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n          if (enableLogs) {\n            _INTERNAL_flushLogsBuffer(client);\n          }\n        }\n      });\n    }\n\n    if (enableLogs) {\n      client.on('flush', () => {\n        _INTERNAL_flushLogsBuffer(client);\n      });\n\n      client.on('afterCaptureLog', () => {\n        if (client._logFlushIdleTimeout) {\n          clearTimeout(client._logFlushIdleTimeout);\n        }\n\n        client._logFlushIdleTimeout = setTimeout(() => {\n          _INTERNAL_flushLogsBuffer(client);\n        }, DEFAULT_FLUSH_INTERVAL);\n      });\n    }\n\n    if (sendDefaultPii) {\n      client.on('postprocessEvent', addAutoIpAddressToUser);\n      client.on('beforeSendSession', addAutoIpAddressToSession);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    level: SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    currentScope: Scope,\n    isolationScope: Scope,\n  ): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n\n    return super._prepareEvent(event, hint, currentScope, isolationScope);\n  }\n}\n"],"mappings":";;;AAuBA,MAAMA,sBAAA,GAAyB,IAAI;;AAEnC;AACA;AACA;AACA;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,aAAA,SAAsBC,MAAM,CAAuB;EAEhE;AACA;AACA;AACA;AACA;EACSC,WAAWA,CAACC,OAAO,EAAwB;IAChD,MAAMC,IAAA,GAAO;MACjB;MACMC,0BAA0B,EAAE,IAAI;MAChC,GAAGF;IACT,CAAK;IACD,MAAMG,SAAA,GAAYC,MAAM,CAACC,iBAAkB,IAAGC,YAAY,EAAE;IAC5DC,gBAAgB,CAACN,IAAI,EAAE,SAAS,EAAE,CAAC,SAAS,CAAC,EAAEE,SAAS,CAAC;IAEzD,KAAK,CAACF,IAAI,CAAC;;IAEf;IACI,MAAMO,MAAO,GAAE,IAAI;IACnB,MAAM;MAAEC,cAAc;MAAEC;IAAA,CAAe,GAAEF,MAAM,CAACG,QAAQ;IACxD,MAAMC,UAAA,GAAaF,YAAY,EAAEE,UAAU;IAE3C,IAAIX,IAAI,CAACY,iBAAA,IAAqBT,MAAM,CAACU,QAAQ,EAAE;MAC7CV,MAAM,CAACU,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;QACzD,IAAIX,MAAM,CAACU,QAAQ,CAACE,eAAA,KAAoB,QAAQ,EAAE;UAChD,IAAI,CAACC,cAAc,EAAE;UACrB,IAAIL,UAAU,EAAE;YACdM,yBAAyB,CAACV,MAAM,CAAC;UAC7C;QACA;MACA,CAAO,CAAC;IACR;IAEI,IAAII,UAAU,EAAE;MACdJ,MAAM,CAACW,EAAE,CAAC,OAAO,EAAE,MAAM;QACvBD,yBAAyB,CAACV,MAAM,CAAC;MACzC,CAAO,CAAC;MAEFA,MAAM,CAACW,EAAE,CAAC,iBAAiB,EAAE,MAAM;QACjC,IAAIX,MAAM,CAACY,oBAAoB,EAAE;UAC/BC,YAAY,CAACb,MAAM,CAACY,oBAAoB,CAAC;QACnD;QAEQZ,MAAM,CAACY,oBAAqB,GAAEE,UAAU,CAAC,MAAM;UAC7CJ,yBAAyB,CAACV,MAAM,CAAC;QAC3C,CAAS,EAAEZ,sBAAsB,CAAC;MAClC,CAAO,CAAC;IACR;IAEI,IAAIa,cAAc,EAAE;MAClBD,MAAM,CAACW,EAAE,CAAC,kBAAkB,EAAEI,sBAAsB,CAAC;MACrDf,MAAM,CAACW,EAAE,CAAC,mBAAmB,EAAEK,yBAAyB,CAAC;IAC/D;EACA;;EAEA;AACA;AACA;EACSC,kBAAkBA,CAACC,SAAS,EAAWC,IAAI,EAAkC;IAClF,OAAOF,kBAAkB,CAAC,IAAI,CAACd,QAAQ,CAACiB,WAAW,EAAEF,SAAS,EAAEC,IAAI,EAAE,IAAI,CAAChB,QAAQ,CAACkB,gBAAgB,CAAC;EACzG;;EAEA;AACA;AACA;EACSC,gBAAgBA,CACrBC,OAAO,EACPC,KAAK,GAAkB,MAAM,EAC7BL,IAAI,EACgB;IACpB,OAAOG,gBAAgB,CAAC,IAAI,CAACnB,QAAQ,CAACiB,WAAW,EAAEG,OAAO,EAAEC,KAAK,EAAEL,IAAI,EAAE,IAAI,CAAChB,QAAQ,CAACkB,gBAAgB,CAAC;EAC5G;;EAEA;AACA;AACA;EACYI,aAAaA,CACrBC,KAAK,EACLP,IAAI,EACJQ,YAAY,EACZC,cAAc,EACa;IAC3BF,KAAK,CAACG,QAAS,GAAEH,KAAK,CAACG,QAAA,IAAY,YAAY;IAE/C,OAAO,KAAK,CAACJ,aAAa,CAACC,KAAK,EAAEP,IAAI,EAAEQ,YAAY,EAAEC,cAAc,CAAC;EACzE;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}